{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscriptionId": {
            "type": "string",
            "defaultValue": "f7714864-7cad-4c8b-919b-dd2917359729",
            "metadata": {
                "description": "Azure subscription ID"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "eastus2",
            "metadata": {
                "description": "Primary location for all resources"
            }
        },
        "environmentName": {
            "type": "string",
            "defaultValue": "fromarmtemplate",
            "metadata": {
                "description": "Environment identifier for resource naming"
            }
        },
        "projectPrefix": {
            "type": "string",
            "defaultValue": "willbyron",
            "metadata": {
                "description": "Project prefix for resource naming"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet-willbyron-foundry",
            "metadata": {
                "description": "Virtual network name"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Virtual network address space"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "subnet-foundry",
            "metadata": {
                "description": "Subnet name for private endpoints"
            }
        },
        "subnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "Subnet address space"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "stwillbyronarmtemplate",
            "maxLength": 24,
            "minLength": 3,
            "metadata": {
                "description": "Storage account name (3-24 chars, lowercase letters and numbers only)"
            }
        },
        "storageAccountSku": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Storage account SKU"
            }
        },
        "aiResourceName": {
            "type": "string",
            "defaultValue": "ais-willbyron-fromarmtemplate",
            "metadata": {
                "description": "Azure AI Services resource name"
            }
        },
        "aiServicesSku": {
            "type": "string",
            "defaultValue": "S0",
            "allowedValues": [
                "F0",
                "S0"
            ],
            "metadata": {
                "description": "Azure AI Services pricing tier"
            }
        },
        "projectName": {
            "type": "string",
            "defaultValue": "project-willbyron-fromarmtemplate",
            "metadata": {
                "description": "Azure AI Foundry project name"
            }
        },
        "userPrincipalId": {
            "type": "string",
            "metadata": {
                "description": "Principal ID of the user to assign RBAC roles"
            }
        },
        "enablePrivateEndpoints": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable private endpoints for secure networking"
            }
        },
        "enablePublicNetworkAccess": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Allow public network access to resources"
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
                "Environment": "Lab",
                "Project": "Azure AI Foundry",
                "DeploymentMethod": "ARM Template",
                "Owner": "Will Byron"
            },
            "metadata": {
                "description": "Tags to apply to all resources"
            }
        }
    },
    "variables": {
        "publicNetworkAccess": "[if(parameters('enablePublicNetworkAccess'), 'Enabled', 'Disabled')]",
        "privateDnsZones": [
            "privatelink.api.azureml.ms",
            "privatelink.notebooks.azure.net",
            "privatelink.cognitiveservices.azure.com",
            "privatelink.blob.core.windows.net",
            "privatelink.file.core.windows.net"
        ],
        "roleDefinitions": {
            "aiDeveloper": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '64702f94-c441-49e6-a78b-ef80e0188fee')]",
            "storageBlobDataContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
            "cognitiveServicesUser": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'a97b65f3-24c7-4388-baec-2e87135dc908')]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-04-01",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAddressPrefix')]",
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('enablePrivateEndpoints')]",
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateDnsZones')[copyIndex()]]",
            "location": "global",
            "tags": "[parameters('tags')]",
            "copy": {
                "name": "privateDnsZoneLoop",
                "count": "[length(variables('privateDnsZones'))]"
            }
        },
        {
            "condition": "[parameters('enablePrivateEndpoints')]",
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('privateDnsZones')[copyIndex()], '/', parameters('vnetName'), '-link')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[copyIndex()])]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "copy": {
                "name": "privateDnsZoneLinkLoop",
                "count": "[length(variables('privateDnsZones'))]"
            },
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "[parameters('storageAccountSku')]"
            },
            "kind": "StorageV2",
            "properties": {
                "publicNetworkAccess": "[variables('publicNetworkAccess')]",
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('aiResourceName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "[parameters('aiServicesSku')]"
            },
            "kind": "AIServices",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "customSubDomainName": "[parameters('aiResourceName')]",
                "publicNetworkAccess": "[variables('publicNetworkAccess')]",
                "disableLocalAuth": false
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2024-04-01",
            "name": "[parameters('projectName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiResourceName'))]"
            ],
            "properties": {
                "friendlyName": "[parameters('projectName')]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "publicNetworkAccess": "[variables('publicNetworkAccess')]",
                "systemDatastoresAuthMode": "Identity"
            }
        },
        {
            "condition": "[parameters('enablePrivateEndpoints')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '-blob-pe')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('storageAccountName'), '-blob-connection')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "blob"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('enablePrivateEndpoints')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '-file-pe')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('storageAccountName'), '-file-connection')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "file"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('enablePrivateEndpoints')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('aiResourceName'), '-pe')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiResourceName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('aiResourceName'), '-connection')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiResourceName'))]",
                            "groupIds": [
                                "account"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('enablePrivateEndpoints')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('projectName'), '-pe')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('projectName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('projectName'), '-connection')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('projectName'))]",
                            "groupIds": [
                                "amlworkspace"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(resourceGroup().id, parameters('userPrincipalId'), 'AIUser')]",
            "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('projectName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('roleDefinitions').aiDeveloper]",
                "principalId": "[parameters('userPrincipalId')]",
                "principalType": "User"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(resourceGroup().id, parameters('userPrincipalId'), 'StorageContributor')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('roleDefinitions').storageBlobDataContributor]",
                "principalId": "[parameters('userPrincipalId')]",
                "principalType": "User"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(resourceGroup().id, parameters('userPrincipalId'), 'CognitiveServicesUser')]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiResourceName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('roleDefinitions').cognitiveServicesUser]",
                "principalId": "[parameters('userPrincipalId')]",
                "principalType": "User"
            }
        }
    ],
    "outputs": {
        "aiFoundryResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('projectName'))]"
        },
        "storageAccountId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
        },
        "aiServicesId": {
            "type": "string",
            "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiResourceName'))]"
        },
        "vnetId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        },
        "deploymentSummary": {
            "type": "object",
            "value": {
                "resourcesCreated": {
                    "virtualNetwork": "[parameters('vnetName')]",
                    "storageAccount": "[parameters('storageAccountName')]",
                    "aiServices": "[parameters('aiResourceName')]",
                    "aiFoundryProject": "[parameters('projectName')]",
                    "privateEndpointsEnabled": "[parameters('enablePrivateEndpoints')]"
                },
                "location": "[parameters('location')]",
                "environment": "[parameters('environmentName')]"
            }
        }
    }
}
